<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- 스프링 MVC 어노테이션을 사용하도록 설정 -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Tiles -->
    <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <beans:property name="definitions">
            <beans:list>
                <beans:value>/WEB-INF/tiles/tiles.xml</beans:value>
				<beans:value>/WEB-INF/tiles/tiles-board.xml</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>        
    <beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <beans:property name="viewClass" 
                        value="org.springframework.web.servlet.view.tiles3.TilesView" />
        <beans:property name="order" value="1" />
    </beans:bean>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2" />
	</beans:bean>

	<!-- ALPHAKA인터셉터를 활용할 URI 경로설정 -->
	<beans:bean id="AlphakaInterceptor" class="kr.kro.kkalphaka.interceptor.AlphakaInterceptor"></beans:bean>
	<beans:bean id="authInterceptor" class="kr.kro.kkalphaka.interceptor.AuthInterceptor"></beans:bean>
	<beans:bean id="loginInterceptor" class="kr.kro.kkalphaka.interceptor.LoginInterceptor"></beans:bean>
	<interceptors>
			<interceptor>
				<mapping path="/404"/>
				<beans:ref bean="AlphakaInterceptor"/>
			</interceptor>
			<interceptor>
				<mapping path="/loginPost"/>
				<beans:ref bean="loginInterceptor"/>
			</interceptor>
			<interceptor>
				<mapping path="/utils/*"/>
				<mapping path="/board/tables/*"/>
				<beans:ref bean="authInterceptor"/>
			</interceptor>
		</interceptors>

	<!-- 웹 앱 클래스가 포함된 패키지 -->
	<context:component-scan base-package="kr.kro.kkalphaka">
	</context:component-scan>
		
</beans:beans>
